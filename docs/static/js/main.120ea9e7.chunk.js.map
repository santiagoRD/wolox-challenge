{"version":3,"sources":["helpers/common/Loader.jsx","helpers/common/Button.jsx","actions/authActions.js","actions/notificationActions.js","helpers/common/Modal.jsx","routes/AppRoutes.jsx","reducers/authReducer.js","reducers/notificationReducer.js","reducers/registryReducer.js","reducers/technologiesReducer.js","store/store.js","App.jsx","index.jsx","types/types.js"],"names":["Loader","className","Button","text","classList","handleClick","type","onClick","defaultProps","userAuthentication","token","email","logged","types","login","payload","userLogout","logout","authError","error","toggleModal","show","message","toggle","Modal","showModal","handleClose","PrivateRoute","lazy","PublicRoute","TechnologiesPage","Dashboard","LoginPage","RegistryPage","TermAndConditions","AppRoutes","props","handleLogin","handleToggleModal","useEffect","JSON","parse","localStorage","getItem","fallback","exact","path","component","propperties","connect","auth","notification","user","dispatch","bindActionCreators","initialState","authReducer","state","action","notificationReducer","name","lastName","country","province","phone","password","conditions","registryReducer","createUser","registryError","techs","technologiesReducer","setTechs","techError","reducers","combineReducers","registry","technologies","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.120ea9e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => (\r\n  <div className='loader__wrapper'>\r\n    <div className='loader__container'>\r\n      <div className='loader__item' />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, classList, handleClick, type }) => (\r\n  /* eslint-disable  react/button-has-type */\r\n  <button type={type} className={classList} onClick={handleClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  classList: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  type: PropTypes.oneOf(['button', 'submit', 'reset'])\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: '',\r\n  classList: 'btn',\r\n  type: 'button',\r\n  handleClick: () => {}\r\n};\r\n","import types from '../types/types';\r\n\r\nexport const userAuthentication = (token, email, logged) => ({\r\n  type: types.login,\r\n  payload: {\r\n    token,\r\n    email,\r\n    logged\r\n  }\r\n});\r\n\r\nexport const userLogout = () => ({\r\n  type: types.logout,\r\n  payload: {}\r\n});\r\n\r\nexport const authError = error => ({\r\n  type: types.error,\r\n  payload: error\r\n});\r\n","import types from '../types/types';\r\n\r\nconst toggleModal = (show, message) => ({\r\n  type: types.toggle,\r\n  payload: {\r\n    show,\r\n    message\r\n  }\r\n});\r\n\r\nexport default toggleModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport './Modal.scss';\r\n\r\nconst Modal = ({ showModal, message, handleClose }) => (\r\n  <div className={`modal ${showModal ? 'show__modal' : 'hidde__modal'}`}>\r\n    <main className='modal__main'>\r\n      <p>{message}</p>\r\n      <Button type='button' classList='btn btn-outline btn-color-blue' text='Continuar' handleClick={handleClose} />\r\n    </main>\r\n  </div>\r\n);\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  showModal: PropTypes.bool.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  handleClose: PropTypes.func.isRequired\r\n};\r\n","import React, { lazy, Suspense, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { userAuthentication } from '../actions/authActions';\r\nimport Modal from '../helpers/common/Modal';\r\nimport toggleModal from '../actions/notificationActions';\r\nimport Loader from '../helpers/common/Loader';\r\n\r\nconst PrivateRoute = lazy(() => import('./PrivateRoute'));\r\nconst PublicRoute = lazy(() => import('./PublicRoute'));\r\nconst TechnologiesPage = lazy(() => import('../components/technologies-list/TechnologiesPage'));\r\nconst Dashboard = lazy(() => import('../components/home/Dashboard'));\r\nconst LoginPage = lazy(() => import('../components/login/LoginPage'));\r\nconst RegistryPage = lazy(() => import('../components/registry/RegistryPage'));\r\nconst TermAndConditions = lazy(() => import('../components/terms-and-conditions/TermAndConditions'));\r\n\r\nconst AppRoutes = props => {\r\n  const { logged, handleLogin, handleToggleModal, show, message } = props;\r\n\r\n  useEffect(() => {\r\n    const { token = '', email = '', logged: isLogged = false } = JSON.parse(localStorage.getItem('auth')) || {};\r\n    if (token) {\r\n      handleLogin(token, email, isLogged);\r\n    }\r\n  }, [logged]);\r\n\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Router>\r\n        <Modal showModal={show} message={message} handleClose={() => handleToggleModal(false, '')} />\r\n        <Switch>\r\n          <PublicRoute exact path='/' logged={logged} component={propperties => <Dashboard {...propperties} />} />\r\n          <PublicRoute exact logged={logged} path='/login' component={propperties => <LoginPage {...propperties} />} />\r\n          <PublicRoute exact logged={logged} path='/registry' component={propperties => <RegistryPage {...propperties} />} />\r\n          <PublicRoute exact path='/terms-and-conditions' logged={logged} component={propperties => <TermAndConditions {...propperties} />} />\r\n          <PrivateRoute exact path='/admin' logged={logged} component={propperties => <TechnologiesPage {...propperties} />} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ handleLogin: userAuthentication, handleToggleModal: toggleModal }, dispatch);\r\n\r\nconst mapStateToProps = ({ auth, notification }) => ({\r\n  logged: auth.user.logged,\r\n  show: notification.show,\r\n  message: notification.message\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRoutes);\r\n\r\nAppRoutes.propTypes = {\r\n  logged: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  message: PropTypes.string\r\n};\r\n\r\nAppRoutes.defaultProps = {\r\n  message: ''\r\n};\r\n","import types from '../types/types';\r\n\r\nconst initialState = {\r\n  user: {\r\n    token: '',\r\n    email: '',\r\n    logged: false\r\n  },\r\n  error: ''\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login: {\r\n      return { ...state, user: { ...action.payload } };\r\n    }\r\n    case types.logout:\r\n      return { ...state, user: { ...state.user, logged: false } };\r\n\r\n    case types.authError:\r\n      return { ...state, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","import types from '../types/types';\r\n\r\nconst initialState = {\r\n  show: false,\r\n  message: ''\r\n};\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.toggle:\r\n      return { ...state, ...action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import types from '../types/types';\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: '',\r\n    lastName: '',\r\n    country: '',\r\n    province: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n    conditions: false,\r\n    token: ''\r\n  },\r\n  error: ''\r\n};\r\n\r\nconst registryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.createUser:\r\n      return { ...state, user: action.payload };\r\n\r\n    case types.registryError:\r\n      return { ...state, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default registryReducer;\r\n","import types from '../types/types';\r\n\r\nconst initialState = {\r\n  techs: [],\r\n  error: ''\r\n};\r\n\r\nconst technologiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.setTechs:\r\n      return { ...state, techs: action.payload };\r\n\r\n    case types.techError:\r\n      return { ...state, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default technologiesReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport authReducer from '../reducers/authReducer';\r\nimport notificationReducer from '../reducers/notificationReducer';\r\nimport registryReducer from '../reducers/registryReducer';\r\nimport technologiesReducer from '../reducers/technologiesReducer';\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  registry: registryReducer,\r\n  notification: notificationReducer,\r\n  technologies: technologiesReducer\r\n});\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AppRoutes from './routes/AppRoutes';\nimport store from './store/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <AppRoutes />\n  </Provider>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","const types = {\r\n  login: '[Auth] Login',\r\n  logout: '[Auth Logout]',\r\n  authError: '[Auth] Error',\r\n  createUser: '[Registry] Create User',\r\n  registryError: '[Registry] Error',\r\n  toggle: '[Notification] Toggle Modal',\r\n  setTechs: '[Techs] Set Techs',\r\n  techError: '[Tech] Error'\r\n};\r\n\r\nexport default types;\r\n"],"sourceRoot":""}