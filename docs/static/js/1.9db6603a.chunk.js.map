{"version":3,"sources":["helpers/common/Input.jsx"],"names":["Input","classList","type","value","onChange","placeholder","name","maxLength","minLength","onBlur","onFocus","required","autoComplete","error","id","htmlFor","labelText","className","defaultProps"],"mappings":"2IAGMA,G,KAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,YAAaC,EAAlD,EAAkDA,KAAMC,EAAxD,EAAwDA,UAAWC,EAAnE,EAAmEA,UAAWC,EAA9E,EAA8EA,OAAQC,EAAtF,EAAsFA,QAASC,EAA/F,EAA+FA,SAAUC,EAAzG,EAAyGA,aAAcC,EAAvH,EAAuHA,MAAOC,EAA9H,EAA8HA,GAAIC,EAAlI,EAAkIA,QAASC,EAA3I,EAA2IA,UAA3I,OACZ,sBAAKC,UAAU,mBAAf,UACE,uBACEA,UAAWhB,EACXU,SAAUA,EACVT,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVK,OAAQA,EACRC,QAASA,EACTL,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXK,aAAcA,EACdJ,UAAWA,EACXM,GAAIA,IAEI,aAATZ,GAAuB,uBAAOa,QAASA,EAAhB,SAA0BC,IACjDH,GAAS,uBAAOI,UAAU,QAAjB,SAA0BJ,SAIzBb,YAqBfA,EAAMkB,aAAe,CACnBjB,UAAW,GACXM,UAAW,GACXC,UAAW,EACXN,KAAM,OACNO,OAAQ,aACRC,QAAS,aACTE,aAAc,MACdE,GAAI,GACJC,QAAS,GACTF,MAAO","file":"static/js/1.9db6603a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ classList, type, value, onChange, placeholder, name, maxLength, minLength, onBlur, onFocus, required, autoComplete, error, id, htmlFor, labelText }) => (\r\n  <div className='input__container'>\r\n    <input\r\n      className={classList}\r\n      required={required}\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onFocus={onFocus}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      maxLength={maxLength}\r\n      autoComplete={autoComplete}\r\n      minLength={minLength}\r\n      id={id}\r\n    />\r\n    {type === 'checkbox' && <label htmlFor={htmlFor}>{labelText}</label>}\r\n    {error && <small className='error'>{error}</small>}\r\n  </div>\r\n);\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  classList: PropTypes.string,\r\n  type: PropTypes.oneOf(['button', 'checkbox', 'date', 'email', 'number', 'password', 'submit', 'tel', 'text']),\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  maxLength: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  required: PropTypes.bool.isRequired,\r\n  autoComplete: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string,\r\n  htmlFor: PropTypes.string,\r\n  labelText: PropTypes.string.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nInput.defaultProps = {\r\n  classList: '',\r\n  maxLength: 30,\r\n  minLength: 1,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onFocus: () => {},\r\n  autoComplete: 'off',\r\n  id: '',\r\n  htmlFor: '',\r\n  error: ''\r\n};\r\n"],"sourceRoot":""}